"use client"
import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Input } from '@/components/ui/input';
import { Label } from '@/components/ui/label';
import { Textarea } from '@/components/ui/textarea';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Trash2, Plus } from 'lucide-react'; // ‡¶Ü‡¶á‡¶ï‡¶® ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø 
import InputField from '@/helpers/InputField';
import SelectFiled from '@/helpers/SelectFiled';
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from './ui/table';


export default function AdmissionForm({ handleSubmit }) {
    // üí° ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶ó‡¶§ ‡¶§‡¶•‡ßç‡¶Ø‡ßá‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡¶∏‡ßç‡¶ü‡ßá‡¶ü
    const [defaultEducation, setDefaultEducation] = useState({
        degree: '',
        board: '',
        roll: '',
        reg: '',
        passingYear: '',
        result: ''

    })
    //  multile education (as array)
    const [educationInfo, setEducationInfo] = useState([]);


    const [formData, setFormData] = useState({
        studentName: "",
        fatherName: "",
        motherName: "",
        dob: "",
        nidOrBirth: "",
        religion: "",
        gender: "",
        bloodGroup: "",
        mobileNo: "",
        guradianMobileNo: "",
        email: "",
        vill: "",
        post: "",
        upozila: "",
        dist: "",
        education: educationInfo,
        photo: ""
    })
    console.log(formData)
    const handleAddEducation = () => {
        setEducationInfo([...educationInfo, defaultEducation]);
    };


    // ‡¶è‡¶°‡ßÅ‡¶ï‡ßá‡¶∂‡¶® ‡¶∏‡ßá‡¶ï‡¶∂‡¶® ‡¶∞‡¶ø‡¶Æ‡ßÅ‡¶≠ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
    const handleRemoveEducation = (index) => {
        const list = [...educationInfo];
        list.splice(index, 1);
        setEducationInfo(list);
    };


    const handleEducationChange = (e) => {
        const { name, value } = e.target;
        setDefaultEducation((prev) => ({
            ...prev,
            [name]: value
        }))
    };


    const handleChange = (e) => {
        const { name, value, type, files } = e.target;
        setFormData((prev) => ({
            ...prev,
            [name]: value
        }))
    };



    return (
        <form
            onSubmit={handleSubmit}
            className="space-y-8">

            {/* ‡ßß. ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø */}
            <h3 className="text-xl font-semibold border-b pb-2 text-gray-700">‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶è‡¶¨‡¶Ç ‡¶∂‡¶ø‡¶´‡¶ü‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø</h3>

            <div className="grid md:grid-cols-2 gap-4">
                {/* 1. ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ (‡¶è‡¶ñ‡¶® Select) */}
                <div className="space-y-2">
                    <Label htmlFor="courseName">‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ</Label>
                    <Select required>
                        <SelectTrigger id="courseName" className="w-full">
                            <SelectValue placeholder="‡¶ï‡ßã‡¶∞‡ßç‡¶∏ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®" />
                        </SelectTrigger>
                        <SelectContent>
                            {/* üí° ‡¶°‡¶æ‡¶Æ‡¶ø ‡¶ï‡ßã‡¶∞‡ßç‡¶∏‡ßá‡¶∞ ‡¶§‡¶æ‡¶≤‡¶ø‡¶ï‡¶æ */}
                            <SelectItem value="web_dev">‡¶ì‡¶Ø‡¶º‡ßá‡¶¨ ‡¶°‡ßá‡¶≠‡ßá‡¶≤‡¶™‡¶Æ‡ßá‡¶®‡ßç‡¶ü (MERN Stack)</SelectItem>
                            <SelectItem value="graphics_design">‡¶™‡ßç‡¶∞‡¶´‡ßá‡¶∂‡¶®‡¶æ‡¶≤ ‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï‡ßç‡¶∏ ‡¶°‡¶ø‡¶ú‡¶æ‡¶á‡¶®</SelectItem>
                            <SelectItem value="office_management">‡¶Ö‡¶´‡¶ø‡¶∏ ‡¶Æ‡ßç‡¶Ø‡¶æ‡¶®‡ßá‡¶ú‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶ì ‡¶Ü‡¶â‡¶ü‡¶∏‡ßã‡¶∞‡ßç‡¶∏‡¶ø‡¶Ç</SelectItem>
                            <SelectItem value="digital_marketing">‡¶°‡¶ø‡¶ú‡¶ø‡¶ü‡¶æ‡¶≤ ‡¶Æ‡¶æ‡¶∞‡ßç‡¶ï‡ßá‡¶ü‡¶ø‡¶Ç ‡¶ï‡ßã‡¶∞‡ßç‡¶∏</SelectItem>
                            <SelectItem value="video_editing">‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶è‡¶°‡¶ø‡¶ü‡¶ø‡¶Ç ‡¶ì ‡¶Æ‡ßã‡¶∂‡¶® ‡¶ó‡ßç‡¶∞‡¶æ‡¶´‡¶ø‡¶ï‡ßç‡¶∏</SelectItem>
                        </SelectContent>
                    </Select>
                </div>

                {/* 2. ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶∂‡¶ø‡¶´‡¶ü (Select) */}
                <div className="space-y-2">
                    <Label htmlFor="shift">‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡¶∂‡¶ø‡¶´‡¶ü</Label>
                    <Select required>
                        <SelectTrigger id="shift" className="w-full">
                            <SelectValue placeholder="‡¶∂‡¶ø‡¶´‡¶ü ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®" />
                        </SelectTrigger>
                        <SelectContent>
                            <SelectItem value="morning">‡¶∏‡¶ï‡¶æ‡¶≤ (Morning)</SelectItem>
                            <SelectItem value="day">‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤ (Day)</SelectItem>
                            <SelectItem value="evening">‡¶∏‡¶®‡ßç‡¶ß‡ßç‡¶Ø‡¶æ (Evening)</SelectItem>
                        </SelectContent>
                    </Select>
                </div>
            </div>

            {/* ‡ß®. ‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶ì ‡¶Ö‡¶≠‡¶ø‡¶≠‡¶æ‡¶¨‡¶ï‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø (‡¶™‡ßÇ‡¶∞‡ßç‡¶¨‡ßá‡¶∞ ‡¶´‡¶ø‡¶≤‡ßç‡¶°‡¶ó‡ßÅ‡¶≤‡¶ø ‡¶è‡¶ñ‡¶æ‡¶®‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá) */}
            <h3 className="text-xl font-semibold border-b pb-2 pt-4 text-gray-700">‡¶¨‡ßç‡¶Ø‡¶ï‡ßç‡¶§‡¶ø‡¶ó‡¶§ ‡¶ì ‡¶Ö‡¶≠‡¶ø‡¶≠‡¶æ‡¶¨‡¶ï‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø</h3>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">


                <InputField
                    label={"‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶®‡¶æ‡¶Æ"}
                    name={"studentName"}
                    value={formData.studentName}
                    handleChange={handleChange}
                    placeholder={"‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶≤‡¶ø‡¶ñ‡ßã"}
                />

                <InputField
                    type='date'
                    label={"‡¶ú‡¶®‡ßç‡¶Æ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ"}
                    name={"dob"}
                    value={formData.dob}
                    handleChange={handleChange}
                    placeholder={"‡¶ú‡¶®‡ßç‡¶Æ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ"}
                />
                <InputField
                    label={" ‡¶™‡¶ø‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ"}
                    name={"fatherName"}
                    value={formData.fatherName}
                    handleChange={handleChange}
                    placeholder={"‡¶™‡¶ø‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ"}
                />
                <InputField
                    label={"‡¶Æ‡¶æ‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ"}
                    name={"motherName"}
                    value={formData.motherName}
                    handleChange={handleChange}
                    placeholder={"‡¶Æ‡¶æ‡¶§‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ"}
                />

                <SelectFiled
                    label={"‡¶≤‡¶ø‡¶ô‡ßç‡¶ó"}
                    name={"gender"}
                    options={["‡¶™‡ßÅ‡¶∞‡ßÅ‡¶∑", "‡¶Æ‡¶π‡¶ø‡¶≤‡¶æ", "‡¶Ö‡¶®‡ßç‡¶Ø‡¶æ‡¶®‡ßç‡¶Ø"]}
                    handleChange={handleChange}
                    value={formData.gender}
                />
                <SelectFiled
                    label={"‡¶∞‡¶ï‡ßç‡¶§‡ßá‡¶∞ ‡¶ó‡ßç‡¶∞‡ßÅ‡¶™"}
                    name={"bloodGroup"}
                    options={["A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-"]}
                    handleChange={handleChange}
                    value={formData.bloodGroup}
                />

                <InputField
                    type='number'
                    label={"‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ (‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ)"}
                    name={"mobileNo"}
                    value={formData.mobileNo}
                    handleChange={handleChange}
                    placeholder={"‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞‡ßç‡¶•‡ßÄ‡¶∞ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Ç"}
                />
                <InputField
                    type='number'
                    label={"‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞ (‡¶Ö‡¶≠‡¶ø‡¶≠‡¶æ‡¶¨‡¶ï)"}
                    name={"guardianMobileNo"}
                    value={formData.guardianMobileNo}
                    handleChange={handleChange}
                    placeholder={"‡¶Ö‡¶≠‡¶ø‡¶≠‡¶æ‡¶¨‡¶ï‡ßá‡¶∞ ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶Ç"}
                />


            </div>

            <h3 className="text-xl font-semibold border-b pb-2 pt-4 text-gray-700">‡¶∏‡ßç‡¶•‡¶æ‡ßü‡ßÄ ‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ‡¶É </h3>
            <div className="space-y-2 grid grid-cols-2 gap-2">

                <InputField
                    label={"‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ"}
                    name={"vill"}
                    value={formData.vill}
                    handleChange={handleChange}
                    placeholder={"‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ"}
                />

                <InputField
                    label={"‡¶™‡ßã‡¶∑‡ßç‡¶ü ‡¶Ö‡¶´‡¶ø‡¶∏"}
                    name={"post"}
                    value={formData.post}
                    handleChange={handleChange}
                    placeholder={"‡¶™‡ßã‡¶∏‡ßç‡¶ü ‡¶Ö‡¶´‡¶ø‡¶∏‡ßá‡¶∞ ‡¶®‡¶æ‡¶Æ"}
                />

                <InputField
                    label={"‡¶â‡¶™‡¶ú‡ßá‡¶≤‡¶æ"}
                    name={"upozila"}
                    value={formData.upozila}
                    handleChange={handleChange}
                    placeholder={"‡¶â‡¶™‡¶ú‡ßá‡¶≤‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ"}
                />
                <InputField
                    label={"‡¶ú‡ßá‡¶≤‡¶æ"}
                    name={"dist"}
                    value={formData.dist}
                    handleChange={handleChange}
                    placeholder={"‡¶ú‡ßá‡¶≤‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ"}
                />

            </div>

            {/* ‡ß©. ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶ó‡¶§ ‡¶§‡¶•‡ßç‡¶Ø‡ßá‡¶∞ ‡¶°‡¶æ‡¶á‡¶®‡¶æ‡¶Æ‡¶ø‡¶ï ‡¶∏‡ßá‡¶ï‡¶∂‡¶® */}
            <h3 className="text-xl font-semibold border-b pb-2 pt-4 text-gray-700">‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶ó‡¶§ ‡¶§‡¶•‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø</h3>


            <div className="space-y-6">
                <div
                    className="border p-4 rounded-lg bg-gray-50 relative"
                >


                    <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
                        <InputField
                            label={`‡¶°‡¶ø‡¶ó‡ßç‡¶∞‡¶ø/‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ`}
                            name="degree"
                            value={defaultEducation.degree}
                            handleChange={handleEducationChange}
                            placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: S.S.C/H.S.C"
                        />

                        <InputField
                            label={`‡¶¨‡ßã‡¶∞‡ßç‡¶°/‡¶¨‡¶ø‡¶∂‡ßç‡¶¨‡¶¨‡¶ø‡¶¶‡ßç‡¶Ø‡¶æ‡¶≤‡¶Ø‡¶º`}
                            name="board"
                            value={defaultEducation.board}
                            handleChange={handleEducationChange}
                            placeholder="‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶¢‡¶æ‡¶ï‡¶æ ‡¶¨‡ßã‡¶∞‡ßç‡¶°"
                        />

                        <InputField
                            label={`‡¶∞‡ßã‡¶≤ ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞`}
                            name="roll"
                            value={defaultEducation.roll}
                            handleChange={handleEducationChange}
                            placeholder="‡¶¨‡ßã‡¶∞‡ßç‡¶° ‡¶™‡¶∞‡ßÄ‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶∞‡ßã‡¶≤"
                        />

                        <InputField
                            label={`‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞`}
                            type="number"
                            name="reg"
                            value={defaultEducation.reg}
                            handleChange={handleEducationChange}
                            placeholder="‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶® ‡¶®‡¶Ç"
                        />

                        <InputField
                            label={`‡¶™‡¶æ‡¶∂‡ßá‡¶∞ ‡¶∏‡¶®`}
                            type="number"
                            name="passingYear"
                            value={defaultEducation.passingYear}
                            handleChange={handleEducationChange}
                            placeholder="‡¶ï‡¶§ ‡¶∏‡¶æ‡¶≤‡ßá ‡¶™‡¶æ‡¶∂ ‡¶ï‡¶∞‡ßá‡¶õ‡ßá‡¶®"
                        />

                        <InputField
                            label={`‡¶´‡¶≤‡¶æ‡¶´‡¶≤ (GPA/‡¶∂‡ßç‡¶∞‡ßá‡¶£‡ßÄ)`}
                            name="result"
                            value={defaultEducation.result}
                            handleChange={handleEducationChange}
                            placeholder="‡¶∞‡ßá‡¶ú‡¶æ‡¶≤‡ßç‡¶ü"
                        />
                    </div>

                    {/* ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï ‡¶∏‡ßá‡¶ï‡¶∂‡¶® ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶¨‡¶æ‡¶ü‡¶® */}
                    <Button
                        type="button"
                        variant="outline"
                        onClick={handleAddEducation}
                        className="w-full my-3 border-blue-600 text-blue-600 hover:bg-blue-50"
                    >
                        <Plus className="mr-2 h-4 w-4" /> ‡¶Ü‡¶∞‡¶ì ‡¶∂‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶ó‡¶§ ‡¶§‡¶•‡ßç‡¶Ø ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßÅ‡¶®
                    </Button>
                </div>

                {educationInfo.length > 0 && (
                    <Table className="mt-4 border">
                        <TableHeader>
                            <TableRow>
                                <TableHead>‡¶°‡¶ø‡¶ó‡ßç‡¶∞‡¶ø / ‡¶™‡¶∞‡¶ø‡¶ï‡ßç‡¶∑‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ</TableHead>
                                <TableHead>‡¶¨‡ßã‡¶∞‡ßç‡¶°</TableHead>
                                <TableHead>‡¶∞‡ßã‡¶≤</TableHead>
                                <TableHead>‡¶∞‡ßá‡¶ú‡¶ø‡¶∏‡ßç‡¶ü‡ßç‡¶∞‡ßá‡¶∂‡¶®</TableHead>
                                <TableHead>‡¶™‡¶æ‡¶∏‡ßá‡¶∞ ‡¶¨‡¶õ‡¶∞</TableHead>
                                <TableHead>‡¶´‡¶≤‡¶æ‡¶´‡¶≤</TableHead>
                            </TableRow>
                        </TableHeader>

                        <TableBody>
                            {educationInfo.map((ed, index) => (

                                <TableRow key={index}>
                                    <TableCell>{ed.degree}</TableCell>
                                    <TableCell>{ed.board}</TableCell>
                                    <TableCell>{ed.roll}</TableCell>
                                    <TableCell>{ed.reg}</TableCell>
                                    <TableCell>{ed.passingYear}</TableCell>
                                    <TableCell>{ed.result}</TableCell>
                                </TableRow>
                            ))}
                        </TableBody>
                    </Table>
                )}




            </div>




            {/* ‡ß™. ‡¶õ‡¶¨‡¶ø ‡¶Ü‡¶™‡¶≤‡ßã‡¶° */}
            <h3 className="text-xl font-semibold border-b pb-2 pt-4 text-gray-700">‡¶õ‡¶¨‡¶ø ‡¶è‡¶¨‡¶Ç ‡¶ï‡¶æ‡¶ó‡¶ú‡¶™‡¶§‡ßç‡¶∞</h3>
            <div className="space-y-2">
                <Label htmlFor="photo">‡¶Ü‡¶™‡¶®‡¶æ‡¶∞ ‡¶∏‡¶æ‡¶Æ‡ßç‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ï ‡¶õ‡¶¨‡¶ø (‡¶´‡¶ü‡ßã‡¶∞ ‡¶´‡¶æ‡¶á‡¶≤)</Label>
                <Input type="file" id="photo" required />
                <p className="text-xs text-gray-500">‡¶∏‡¶∞‡ßç‡¶¨‡ßã‡¶ö‡ßç‡¶ö ‡ß® ‡¶Æ‡ßá‡¶ó‡¶æ‡¶¨‡¶æ‡¶á‡¶ü, JPG/PNG ‡¶´‡¶∞‡¶Æ‡ßç‡¶Ø‡¶æ‡¶ü‡•§</p>
            </div>


            {/* ‡¶∏‡¶æ‡¶¨‡¶Æ‡¶ø‡¶ü ‡¶¨‡¶æ‡¶ü‡¶® */}
            <Button
                type="submit"
                className="w-full bg-green-600 hover:bg-green-700 text-white py-2 rounded-full font-semibold transition mt-8"
            >
                ‡¶≠‡¶∞‡ßç‡¶§‡¶ø ‡¶´‡¶∞‡¶Æ ‡¶ú‡¶Æ‡¶æ ‡¶¶‡¶ø‡¶®
            </Button>
        </form >)
}
